{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JAYDEN/Documents/jayden/jayden/app/dashboard/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ntype Todo = {\r\n    id: number;\r\n    title: string;\r\n    completed: boolean;\r\n    deadline: Date;\r\n};\r\n\r\nexport default function DashboardPage() {\r\n    const router = useRouter();\r\n    const [todos, setTodos] = useState<Todo[]>([]);\r\n    const [newTodo, setNewTodo] = useState('');\r\n    const [deletingId, setDeletingId] = useState<number | null>(null);\r\n    const [togglingId, setTogglingId] = useState<number | null>(null);\r\n    const [filter, setFilter] = useState<'all' | 'active' | 'completed'>('all');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [deadline, setDeadline] = useState('');\r\n\r\n    const [userEmail, setUserEmail] = useState<string>('');\r\n    const [userName, setUserName] = useState('');\r\n\r\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n\r\n    useEffect(() => {\r\n        const today = new Date();\r\n        const formattedDate = today.toISOString().split('T')[0];\r\n        setDeadline(formattedDate)\r\n        const cahcedEmail = localStorage.getItem('email')\r\n        const cahcedUserName = localStorage.getItem('name')\r\n        cahcedEmail && setUserEmail(cahcedEmail)\r\n        cahcedUserName && setUserName(cahcedUserName)\r\n        if (!token) {\r\n            router.push('/login');\r\n        } else {\r\n            fetchTodos();\r\n        }\r\n    }, []);\r\n\r\n    async function fetchTodos() {\r\n        const res = await fetch('/api/todo/list', {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const data = await res.json();\r\n        if (res.ok) setTodos(data.todos);\r\n    }\r\n\r\n    async function toggleTodo(id: number, currentStatus: boolean) {\r\n        setTogglingId(id);\r\n        await fetch('/api/todo/toggle', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ id, completed: !currentStatus }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n\r\n        setTogglingId(null);\r\n        fetchTodos();\r\n    }\r\n\r\n    async function deleteTodo(id: number) {\r\n        if (!confirm('Are you sure you want to delete this todo?')) return;\r\n        setDeletingId(id);\r\n        await fetch('/api/todo/delete', {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({ id }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n\r\n        setDeletingId(null);\r\n        fetchTodos();\r\n    }\r\n\r\n    async function addTodo(e: React.FormEvent) {\r\n        e.preventDefault();\r\n        if (!newTodo.trim()) return;\r\n\r\n        const res = await fetch('/api/todo/create', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ title: newTodo, deadline }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        });\r\n\r\n\r\n        if (res.ok) {\r\n            setNewTodo('');\r\n            fetchTodos();\r\n        }\r\n    }\r\n    const totalCount = todos.length;\r\n    const activeCount = todos.filter((todo) => !todo.completed).length;\r\n    const completedCount = todos.filter((todo) => todo.completed).length;\r\n\r\n    return (\r\n\r\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-200 via-white to-purple-200 p-6\">\r\n            <div className=\"flex flex-col sm:flex-row justify-between items-center mb-8 bg-white shadow-md rounded-xl p-4\">\r\n                <div className=\"flex flex-wrap gap-2 sm:gap-4 justify-center sm:justify-start\">\r\n                    <button\r\n                        onClick={() => setFilter('all')}\r\n                        className={`px-4 py-1 rounded-full text-sm font-medium border transition ${filter === 'all'\r\n                                ? 'bg-blue-600 text-white'\r\n                                : 'border-blue-300 text-blue-600 hover:bg-blue-100'\r\n                            }`}\r\n                    >\r\n                        All ({totalCount})\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setFilter('active')}\r\n                        className={`px-4 py-1 rounded-full text-sm font-medium border transition ${filter === 'active'\r\n                                ? 'bg-green-600 text-white'\r\n                                : 'border-green-300 text-green-600 hover:bg-green-100'\r\n                            }`}\r\n                    >\r\n                        Active ({activeCount})\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setFilter('completed')}\r\n                        className={`px-4 py-1 rounded-full text-sm font-medium border transition ${filter === 'completed'\r\n                                ? 'bg-purple-600 text-white'\r\n                                : 'border-purple-300 text-purple-600 hover:bg-purple-100'\r\n                            }`}\r\n                    >\r\n                        Completed ({completedCount})\r\n                    </button>\r\n                </div>\r\n\r\n                <button\r\n                    onClick={() => setShowModal(true)}\r\n                    className=\"mt-4 sm:mt-0 bg-blue-100 hover:bg-blue-200 text-blue-700 font-bold text-xl w-12 h-12 rounded-full flex items-center justify-center shadow-md transition\"\r\n                    title=\"Profile\"\r\n                >\r\n                    {userName?.slice(0, 1) || (<div className=\"h-6 w-6 rounded-full border-2 border-red-500 border-t-transparent animate-spin\" />)}\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"max-w-xl mx-auto bg-white shadow-xl rounded-2xl p-8\">\r\n                <h1 className=\"text-3xl font-bold mb-6 text-center text-blue-700\">Your Todo List</h1>\r\n\r\n                <form onSubmit={addTodo} className=\"flex flex-col sm:flex-row gap-2 mb-4\">\r\n                    <input\r\n                        value={newTodo}\r\n                        onChange={(e) => setNewTodo(e.target.value)}\r\n                        placeholder=\"New todo...\"\r\n                        className=\"flex-grow p-2 border rounded\"\r\n                    />\r\n                    <input\r\n                        type=\"date\"\r\n                        value={deadline}\r\n                        onChange={(e) => setDeadline(e.target.value)}\r\n                        className=\"p-2 border rounded text-black\"\r\n                    />\r\n                    <button className=\"bg-blue-600 text-white px-4 rounded\">Add</button>\r\n                </form>\r\n\r\n\r\n                <ul className=\"space-y-4\">\r\n                    {todos\r\n                        .filter((todo) => {\r\n                            if (filter === 'active') return !todo.completed;\r\n                            if (filter === 'completed') return todo.completed;\r\n                            return true;\r\n                        })\r\n                        .map((todo) => (\r\n                            <li\r\n                                key={todo.id}\r\n                                className={`\r\n    flex flex-col sm:flex-row justify-between items-start sm:items-center\r\n    border p-4 rounded-xl shadow-sm bg-white hover:bg-blue-50\r\n    transition-all duration-300\r\n    ${!todo.completed && todo.deadline && new Date(todo.deadline) < new Date()\r\n                                        ? 'border-red-400'\r\n                                        : !todo.completed &&\r\n                                            todo.deadline &&\r\n                                            new Date(todo.deadline).toDateString() === new Date().toDateString()\r\n                                            ? 'border-orange-400'\r\n                                            : 'border-gray-300'\r\n                                    }\r\n    ${!todo.completed && todo.deadline\r\n                                        ? new Date(todo.deadline).toDateString() === new Date().toDateString()\r\n                                            ? 'bg-orange-500 animate-pulse'\r\n                                            : new Date(todo.deadline) < new Date()\r\n                                                ? 'text-red-500 bg-red-500'\r\n                                                : 'text-gray-500'\r\n                                        : 'text-gray-400'\r\n                                    }\r\n  `}\r\n                            >\r\n                                <div className=\"flex items-center gap-3\r\n  \r\n  \">\r\n                                    {togglingId === todo.id ? (\r\n                                        <div className=\"h-5 w-5 rounded-full border-2 border-blue-500 border-t-transparent animate-spin\" />\r\n                                    ) : (\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={todo.completed}\r\n                                            onChange={() => toggleTodo(todo.id, todo.completed)}\r\n                                            className=\"h-5 w-5 text-blue-600\"\r\n                                        />\r\n                                    )}\r\n                                    <div>\r\n                                        <div\r\n                                            className={`\r\n          text-base font-medium\r\n          ${todo.completed ? 'line-through text-gray-500' : 'text-gray-800'}\r\n          \r\n        `}\r\n                                        >\r\n                                            {todo.title}\r\n                                        </div>\r\n                                        <span\r\n                                            className={`\r\n          text-xs block mt-1 \r\n          ${!todo.completed && todo.deadline\r\n                                                    ? new Date(todo.deadline).toDateString() === new Date().toDateString()\r\n                                                        ? 'text-white animate-pulse'\r\n                                                        : new Date(todo.deadline) < new Date()\r\n                                                            ? 'text-red-500 bg-red-500'\r\n                                                            : 'text-gray-500'\r\n                                                    : 'text-gray-400'\r\n                                                }\r\n        `}\r\n                                        >\r\n                                            {todo.deadline\r\n                                                ? `Due: ${new Date(todo.deadline).toLocaleDateString()}`\r\n                                                : 'No deadline'}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {deletingId === todo.id ? (\r\n                                    <div className=\"h-6 w-6 rounded-full border-2 border-red-500 border-t-transparent animate-spin\" />\r\n                                ) : (\r\n                                    <button\r\n                                        onClick={() => deleteTodo(todo.id)}\r\n                                        className=\"text-red-600 font-medium hover:underline text-sm mt-2 sm:mt-0\"\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                )}\r\n                            </li>\r\n\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {showModal && (\r\n                <div className=\"fixed inset-0 bg-black bg-opacity-30 flex justify-center items-center z-50\">\r\n                    <div className=\"bg-white p-6 rounded-xl shadow-lg w-80 relative\">\r\n                        <button\r\n                            onClick={() => setShowModal(false)}\r\n                            className=\"absolute top-2 right-3 text-gray-500 hover:text-red-500 text-xl\"\r\n                        >\r\n                            ×\r\n                        </button>\r\n                        <div className=\"text-center\">\r\n                            <div className=\"text-2xl font-bold mb-2 text-blue-600\">{userName}</div>\r\n                            <div className=\"text-sm text-gray-500 mb-4\">{userEmail}</div>\r\n                            <button\r\n                                onClick={() => {\r\n                                    localStorage.removeItem('token');\r\n                                    localStorage.removeItem('email');\r\n                                    router.push('/login');\r\n                                }}\r\n                                className=\"w-full bg-red-500 hover:bg-red-600 text-white py-2 rounded-lg mb-2\"\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                            <button className=\"text-blue-500 hover:underline text-sm\">\r\n                                <a href=\"/forgot-password\">\r\n                                    Forgot Password?\r\n                                </a>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JAYDEN/Documents/jayden/jayden/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}