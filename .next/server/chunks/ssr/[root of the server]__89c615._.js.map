{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/jayden-s-pc/Documents/jayden/app/page.tsx"],"sourcesContent":["'use client'\nimport { useEffect, useRef, useState } from \"react\";\nimport { io, Socket } from \"socket.io-client\";\n\nconst socket: Socket = io(\"ws://192.168.214.184:8080\");\n\nconst Home = () => {\n  const localAudioRef = useRef<HTMLAudioElement | null>(null);\n  const remoteAudioRef = useRef<HTMLAudioElement | null>(null);\n  const peerRef = useRef<RTCPeerConnection | null>(null);\n\n  useEffect(() => {\n    // Access user's microphone\n    navigator.mediaDevices.getUserMedia({ audio: true })\n      .then((stream) => {\n        if (localAudioRef.current) {\n          localAudioRef.current.srcObject = stream;\n        }\n\n        peerRef.current = new RTCPeerConnection({\n          iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }]\n        });\n\n        // Add all media tracks to the peer connection\n        stream.getTracks().forEach((track) => {\n          peerRef.current?.addTrack(track, stream);\n        });\n\n        // Handle remote stream\n        peerRef.current.ontrack = (event) => {\n          if (remoteAudioRef.current) {\n            remoteAudioRef.current.srcObject = event.streams[0];\n          }\n        };\n\n        // Handle ICE candidate\n        peerRef.current.onicecandidate = (event) => {\n          if (event.candidate) {\n            socket.emit(\"ice-candidate\", event.candidate);\n          }\n        };\n      });\n\n    // Listen for incoming offer\n    socket.on(\"offer\", async (offer: RTCSessionDescriptionInit) => {\n      if (peerRef.current) {\n        await peerRef.current.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerRef.current.createAnswer();\n        await peerRef.current.setLocalDescription(answer);\n        socket.emit(\"answer\", answer);\n      }\n    });\n\n    // Listen for incoming answer\n    socket.on(\"answer\", async (answer: RTCSessionDescriptionInit) => {\n      if (peerRef.current) {\n        await peerRef.current.setRemoteDescription(new RTCSessionDescription(answer));\n      }\n    });\n\n    // Listen for ICE candidates\n    socket.on(\"ice-candidate\", async (candidate: RTCIceCandidate) => {\n      try {\n        if (peerRef.current) {\n          await peerRef.current.addIceCandidate(new RTCIceCandidate(candidate));\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }, []);\n\n  // Start the call by creating an offer\n  const startCall = async () => {\n    if (peerRef.current) {\n      const offer = await peerRef.current.createOffer();\n      await peerRef.current.setLocalDescription(offer);\n      socket.emit(\"offer\", offer);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Offline Audio Call</h1>\n      <button onClick={startCall}>Start Call</button>\n      <audio ref={localAudioRef} autoPlay muted />\n      <audio ref={remoteAudioRef} autoPlay />\n    </div>\n  );\n};\n\nexport default Home;"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAFA;;;;AAIA,MAAM,SAAiB,CAAA,GAAA,wLAAA,CAAA,KAAE,AAAD,EAAE;AAE1B,MAAM,OAAO;IACX,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA2B;IACtD,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA2B;IACvD,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA4B;IAEjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,2BAA2B;QAC3B,UAAU,YAAY,CAAC,YAAY,CAAC;YAAE,OAAO;QAAK,GAC/C,IAAI,CAAC,CAAC;YACL,IAAI,cAAc,OAAO,EAAE;gBACzB,cAAc,OAAO,CAAC,SAAS,GAAG;YACpC;YAEA,QAAQ,OAAO,GAAG,IAAI,kBAAkB;gBACtC,YAAY;oBAAC;wBAAE,MAAM;oBAA+B;iBAAE;YACxD;YAEA,8CAA8C;YAC9C,OAAO,SAAS,GAAG,OAAO,CAAC,CAAC;gBAC1B,QAAQ,OAAO,EAAE,SAAS,OAAO;YACnC;YAEA,uBAAuB;YACvB,QAAQ,OAAO,CAAC,OAAO,GAAG,CAAC;gBACzB,IAAI,eAAe,OAAO,EAAE;oBAC1B,eAAe,OAAO,CAAC,SAAS,GAAG,MAAM,OAAO,CAAC,EAAE;gBACrD;YACF;YAEA,uBAAuB;YACvB,QAAQ,OAAO,CAAC,cAAc,GAAG,CAAC;gBAChC,IAAI,MAAM,SAAS,EAAE;oBACnB,OAAO,IAAI,CAAC,iBAAiB,MAAM,SAAS;gBAC9C;YACF;QACF;QAEF,4BAA4B;QAC5B,OAAO,EAAE,CAAC,SAAS,OAAO;YACxB,IAAI,QAAQ,OAAO,EAAE;gBACnB,MAAM,QAAQ,OAAO,CAAC,oBAAoB,CAAC,IAAI,sBAAsB;gBACrE,MAAM,SAAS,MAAM,QAAQ,OAAO,CAAC,YAAY;gBACjD,MAAM,QAAQ,OAAO,CAAC,mBAAmB,CAAC;gBAC1C,OAAO,IAAI,CAAC,UAAU;YACxB;QACF;QAEA,6BAA6B;QAC7B,OAAO,EAAE,CAAC,UAAU,OAAO;YACzB,IAAI,QAAQ,OAAO,EAAE;gBACnB,MAAM,QAAQ,OAAO,CAAC,oBAAoB,CAAC,IAAI,sBAAsB;YACvE;QACF;QAEA,4BAA4B;QAC5B,OAAO,EAAE,CAAC,iBAAiB,OAAO;YAChC,IAAI;gBACF,IAAI,QAAQ,OAAO,EAAE;oBACnB,MAAM,QAAQ,OAAO,CAAC,eAAe,CAAC,IAAI,gBAAgB;gBAC5D;YACF,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC;YAChB;QACF;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,MAAM,YAAY;QAChB,IAAI,QAAQ,OAAO,EAAE;YACnB,MAAM,QAAQ,MAAM,QAAQ,OAAO,CAAC,WAAW;YAC/C,MAAM,QAAQ,OAAO,CAAC,mBAAmB,CAAC;YAC1C,OAAO,IAAI,CAAC,SAAS;QACvB;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAO,SAAS;0BAAW;;;;;;0BAC5B,8OAAC;gBAAM,KAAK;gBAAe,QAAQ;gBAAC,KAAK;;;;;;0BACzC,8OAAC;gBAAM,KAAK;gBAAgB,QAAQ;;;;;;;;;;;;AAG1C;uCAEe"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}